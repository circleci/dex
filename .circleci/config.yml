version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/coreos/dex
    steps:
      - checkout
      - run: make
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
          paths:
            - /go/src/github.com/coreos/dex
  unit_tests:
    docker:
      - image: circleci/golang:1.8
      - image: circleci/postgres:9.4.12-alpine
    working_directory: /go/src/github.com/coreos/dex
    environment:
      TEST_RESULTS: /tmp/test-results
      DEX_POSTGRES_DATABASE: postgres
      DEX_POSTGRES_USER: postgres
      DEX_POSTGRES_HOST: localhost
      DEX_LDAP_TESTS: 1
      DEBIAN_FRONTEND: noninteractive
    steps:
      - run: sudo -E apt-get install -y --force-yes slapd time ldap-utils
      - run:
          name: Start LDAP
          command: sudo /etc/init.d/slapd stop
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - run: go get -u github.com/golang/lint/golint
      - run: make testall

  build_image:
    # TODO: use an image that has docker client
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/coreos/dex
    steps:
      # TODO: move to a script
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - run: sudo make docker-image

workflows:
  version: 2

  build_test:
    jobs:
      - checkout_code
      - unit_tests:
          requires:
            - checkout_code
      - build_image:
          requires:
            - checkout_code


deployment:
  deploy:
    branch: /(?!master).+/
    commands:
      - make docker-image
  track-master:
    branch: master
    commands:
      - make docker-image